name: Deploy expense system to aws

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: install node
        uses: actions/setup-node@v2
        with:
          node-version: 12
          cache: npm
          cache-dependency-path: client/package-lock.json
      - name: install node packages
        working-directory: client
        run: npm install
      - name: build client
        working-directory: client
        run: npm run build
      # - name: install go
      #   uses: actions/setup-go@v1
      #   with:
      #     go-version: 1.17.x
      # - name: build lambda artifact
      #   run: |
      #     make build
      #     zip handler.zip ./bin/expense-system
      - name: set up terraform
        uses: hashicorp/setup-terraform@v1
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: set up terraform environment
        run: terraform -chdir=infra init
      - name: deploy infrastructure
        run: terraform -chdir=infra apply -auto-approve -var google_oauth_client_id=${{ secrets.GOOGLE_OAUTH_CLIENT_ID }} -var google_oauth_client_secret=${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
      - name: deploy client
        run: aws s3 sync ./client/build s3://$(terraform -chdir=infra output -raw s3_bucket_name)
